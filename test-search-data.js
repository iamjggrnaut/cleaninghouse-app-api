/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞
 * –ó–∞–ø—É—Å–∫: node test-search-data.js
 */

require('dotenv').config({ path: './.env' });
const axios = require('axios');

const API_BASE_URL = process.env.API_BASE_URL || 'https://app.cleaninghouse-premium.ru/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
const testContractors = [
  {
    fullName: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
    phone: '+79001234567',
    email: 'anna.petrova@test.com',
    password: 'password123',
    role: 'contractor',
    city: '–ú–æ—Å–∫–≤–∞',
    district: '–¶–ê–û',
    metro: '–ü—É—à–∫–∏–Ω—Å–∫–∞—è',
    street: '–¢–≤–µ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞',
    house: '1',
    rating: 4.8,
    ordersCompleted: 45,
    contractorLevel: 'professional',
    verified: true,
    status: 'self_employed'
  },
  {
    fullName: '–ú–∏—Ö–∞–∏–ª –°–º–∏—Ä–Ω–æ–≤',
    phone: '+79001234568',
    email: 'mikhail.smirnov@test.com',
    password: 'password123',
    role: 'contractor',
    city: '–ú–æ—Å–∫–≤–∞',
    district: '–°–ê–û',
    metro: '–°–æ–∫–æ–ª—å–Ω–∏–∫–∏',
    street: '–°–æ–∫–æ–ª—å–Ω–∏—á–µ—Å–∫–∞—è —É–ª–∏—Ü–∞',
    house: '15',
    rating: 4.6,
    ordersCompleted: 23,
    contractorLevel: 'specialist',
    verified: true,
    status: 'individual_entrepreneur'
  },
  {
    fullName: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
    phone: '+79001234569',
    email: 'elena.kozlova@test.com',
    password: 'password123',
    role: 'contractor',
    city: '–ú–æ—Å–∫–≤–∞',
    district: '–°–í–ê–û',
    metro: '–í–î–ù–•',
    street: '–ü—Ä–æ—Å–ø–µ–∫—Ç –ú–∏—Ä–∞',
    house: '100',
    rating: 4.9,
    ordersCompleted: 78,
    contractorLevel: 'expert',
    verified: true,
    status: 'self_employed'
  },
  {
    fullName: '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤',
    phone: '+79001234570',
    email: 'dmitry.volkov@test.com',
    password: 'password123',
    role: 'contractor',
    city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
    district: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π',
    metro: '–ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç',
    street: '–ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç',
    house: '28',
    rating: 4.7,
    ordersCompleted: 34,
    contractorLevel: 'professional',
    verified: true,
    status: 'individual_entrepreneur'
  },
  {
    fullName: '–û–ª—å–≥–∞ –ú–æ—Ä–æ–∑–æ–≤–∞',
    phone: '+79001234571',
    email: 'olga.morozova@test.com',
    password: 'password123',
    role: 'contractor',
    city: '–ú–æ—Å–∫–≤–∞',
    district: '–¶–ê–û',
    metro: '–ö—Ä–∞—Å–Ω—ã–µ –í–æ—Ä–æ—Ç–∞',
    street: '–ú—è—Å–Ω–∏—Ü–∫–∞—è —É–ª–∏—Ü–∞',
    house: '5',
    rating: 4.5,
    ordersCompleted: 12,
    contractorLevel: 'specialist',
    verified: true,
    status: 'self_employed'
  }
];

async function createTestContractors() {
  console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π...');
  
  for (const contractor of testContractors) {
    try {
      console.log(`üìù –°–æ–∑–¥–∞–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: ${contractor.fullName}`);
      
      const response = await axios.post(`${API_BASE_URL}/auth/register`, contractor);
      
      if (response.data.success) {
        console.log(`‚úÖ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ${contractor.fullName} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ${contractor.fullName}:`, response.data);
      }
    } catch (error) {
      if (error.response?.status === 400 && error.response?.data?.message?.includes('—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')) {
        console.log(`‚ö†Ô∏è –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ${contractor.fullName} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      } else {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ${contractor.fullName}:`, error.response?.data || error.message);
      }
    }
  }
  
  console.log('üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!');
}

async function testSearchAPI() {
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–∏—Å–∫–∞...');
  
  try {
    // –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –≤ –ú–æ—Å–∫–≤–µ
    console.log('\nüìã –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –≤ –ú–æ—Å–∫–≤–µ');
    const response1 = await axios.get(`${API_BASE_URL}/users/search/contractors?city=–ú–æ—Å–∫–≤–∞`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –≤ –ú–æ—Å–∫–≤–µ: ${response1.data.total}`);
    
    // –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–æ —Ä–∞–π–æ–Ω—É
    console.log('\nüìã –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –≤ –¶–ê–û');
    const response2 = await axios.get(`${API_BASE_URL}/users/search/contractors?city=–ú–æ—Å–∫–≤–∞&district=–¶–ê–û`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –≤ –¶–ê–û: ${response2.data.total}`);
    
    // –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ –ø–æ –º–µ—Ç—Ä–æ
    console.log('\nüìã –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —É –º–µ—Ç—Ä–æ –ü—É—à–∫–∏–Ω—Å–∫–∞—è');
    const response3 = await axios.get(`${API_BASE_URL}/users/search/contractors?city=–ú–æ—Å–∫–≤–∞&metro=–ü—É—à–∫–∏–Ω—Å–∫–∞—è`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —É –º–µ—Ç—Ä–æ –ü—É—à–∫–∏–Ω—Å–∫–∞—è: ${response3.data.total}`);
    
    // –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
    console.log('\nüìã –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º >= 4.7');
    const response4 = await axios.get(`${API_BASE_URL}/users/search/contractors?city=–ú–æ—Å–∫–≤–∞&minRating=4.7`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º >= 4.7: ${response4.data.total}`);
    
    // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤
    console.log('\nüìã –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤ –ú–æ—Å–∫–≤—ã');
    const response5 = await axios.get(`${API_BASE_URL}/users/filters/districts?city=–ú–æ—Å–∫–≤–∞`);
    console.log(`–†–∞–π–æ–Ω—ã –ú–æ—Å–∫–≤—ã: ${JSON.stringify(response5.data.data)}`);
    
    // –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–æ
    console.log('\nüìã –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–æ –¶–ê–û');
    const response6 = await axios.get(`${API_BASE_URL}/users/filters/metro?city=–ú–æ—Å–∫–≤–∞&district=–¶–ê–û`);
    console.log(`–ú–µ—Ç—Ä–æ –¶–ê–û: ${JSON.stringify(response6.data.data)}`);
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã API –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error.response?.data || error.message);
  }
}

async function main() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–û–ò–°–ö–ê');
  console.log('================================');
  
  await createTestContractors();
  await testSearchAPI();
  
  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüì± –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:');
  console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: npx expo start');
  console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ —ç–∫—Ä–∞–Ω –ø–æ–∏—Å–∫–∞');
  console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã');
}

main().catch(console.error);
